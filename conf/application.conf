# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = customer-profile

appUrl = "https://customer-profile.protected.mdtp"

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
play.http.router = prod.Routes

## Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.api.sandbox.RoutingHttpRequestHandler"

play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.modules.enabled += "uk.gov.hmrc.customerprofile.config.GuiceModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
  confidenceLevel = 200
}

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = INFO

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

router {
  regex = "208606423740|167927702220"
  prefix = "/sandbox"
  header = "X-MOBILE-USER-ID"
}

# Microservice specific config

auditing {
  enabled = true
}

microservice {

  services {

    auth {
      host = localhost
      port = 8500
    }
    citizen-details {
      host = localhost
      port = 9337
      enabled = true
    }

    preferences {
      host = localhost
      port = 8025
    }

    mobile-shuttering {
      host = localhost
      port = 8253
    }

    find-my-nino-add-to-wallet {
        host     = localhost
        port     = 14005
    }

    entity-resolver {
      host = localhost
      port = 8015
      circuitBreaker {
        numberOfCallsToTriggerStateChange = 5
        unavailablePeriodDurationInSeconds = 120
        unstablePeriodDurationInSeconds = 120
      }
    }

  }
}

http-verbs {
  retries {
    ssl-engine-closed-already {
      enabled = true
    }
  }
}

optInVersionsEnabled = false
reOptInEnabled = false

googlePass {
  key = "DummyKey"
}